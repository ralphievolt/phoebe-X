{"version":3,"sources":["webpack:///webpack/bootstrap 217f0fface187a98738b","webpack:///./src/api/constants.js","webpack:///./src/api/args.js","webpack:///./src/api/logger.js","webpack:///./src/api/meteor.js","webpack:///./src/api/files.js","webpack:///./src/api/process.js","webpack:///./src/index.js","webpack:///external \"child_process\"","webpack:///external \"yargs\"","webpack:///external \"os\"","webpack:///external \"colors\"","webpack:///./src/api/spinner.js","webpack:///external \"ora\"","webpack:///external \"cli-spinners\"","webpack:///external \"file-system\"","webpack:///external \"split-file\"","webpack:///external \"del\"","webpack:///./src/api/docker.js","webpack:///./src/api/now.js"],"names":["getFolderName","path","isWin","test","process","platform","pathDelimiter","pathParts","split","length","projectName","cwd","homePath","homedir","meteorNowBuildPath","tarFileName","ignoreVarsArray","ignoreOptionsArray","logPrefix","getArgs","argv","getArg","argName","getEnvironmentVariables","args","argsArray","Array","map","e","envArray","name","value","getEnvironmentVariable","variable","find","getRemainingVariables","environmentVariables","filter","v","indexOf","getRemainingOptions","Object","entries","arg","argWithPrefix","flattenOptions","options","concat","apply","isDebug","Logger","info","message","rest","log","debug","warn","yellow","error","red","succeed","type","restOfMessage","join","prefixed","getVersion","release","match","getMicroVersion","version","shouldBeServerOnly","parseInt","buildMeteorApp","getMeteorSettings","nodeEnv","settingsFilePath","settingsFile","replace","encoding","readFile","readFileSync","writeFile","data","writeFileSync","deletePath","force","splitBuild","splitFileBySize","clearBuildFolder","cmd","Promise","resolve","reject","child","stdio","stdin","stderr","shell","on","code","signal","stdout","toString","main","Spinner","constructor","spinner","dots12","getDockerImage","shouldIncludeMongo","getDeps","getDependencyInstallScripts","deps","delimiter","includes","reduce","accumulator","currentValue","getDockerfileContents","dockerImage","includeMongo","getSupervisordFileContents","prepareDockerConfig","dockerfileContents","constructNowOptions","rootUrl","mongoUrl","remainingVariables","meteorSettings","push","remainingOptions","deploy","nowOptions","deploymentUrl"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 217f0fface187a98738b","import os from 'os';\n\nexport const getFolderName = (path, isWin = /^win/.test(process.platform)) => {\n  const pathDelimiter = isWin ? '\\\\' : '/';\n  const pathParts = path.split(pathDelimiter);\n  return pathParts[pathParts.length - 1];\n};\n\n// run immediately\nexport const projectName = (() => getFolderName(process.cwd()))();\nexport const homePath = os.homedir();\nexport const meteorNowBuildPath = `${homePath}/.meteor-now/build`;\nexport const tarFileName = `${projectName}.tar.gz`;\nexport const ignoreVarsArray = ['MONGO_URL', 'ROOT_URL', 'METEOR_SETTINGS', 'PORT'];\nexport const ignoreOptionsArray = ['deps', '_', '$0', 'help', 'version'];\nexport const logPrefix = '[METEOR-NOW] - ';\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/constants.js","import yargs from 'yargs';\nimport { ignoreVarsArray, ignoreOptionsArray } from './constants';\n\n// returns all args as an yargs object\nexport const getArgs = (argv = process.argv) => yargs(argv).argv;\n\n// returns the arg based on name\nexport const getArg = (argName, argv = process.argv) => getArgs(argv)[argName];\n\n// returns list of environment variables (-e flag)\n// as an array of env objects [{ name: 'MONGO_URL', value: 'mongodb...' }]\nexport const getEnvironmentVariables = () => {\n  const args = getArg('e');\n  if (!args) return null;\n  const argsArray = args instanceof Array ? args : [args];\n  return argsArray.map((e) => {\n    const envArray = e.split('=');\n    return {\n      name: envArray[0],\n      value: envArray[1],\n    };\n  });\n};\n\n// return a single env object\nexport const getEnvironmentVariable = (name, args = getEnvironmentVariables()) => {\n  if (!args) {\n    return null;\n  }\n  const variable = args.find(e => e.name === name);\n  return variable ? variable.value : null;\n};\n\n// get all variables except for MONGO_URL, ROOT_URL, METEOR_SETTINGS and PORT\n// this is in case user passed additional environment variables to their app\n// those would be passed down to the now cli command\nexport const getRemainingVariables = (environmentVariables = getEnvironmentVariables()) => {\n  if (!environmentVariables) {\n    return [];\n  }\n  // filter our vars we already handled and return an array\n  // where first value is the flag -e and second is the ENV=VALUE\n  return environmentVariables\n    .filter(v => ignoreVarsArray.indexOf(v.name) === -1)\n    .map(v => ['-e', `${v.name}=${v.value}`]);\n};\n\n// get remaining options that user has passsed to meteor-now\nexport const getRemainingOptions = () => {\n  const args = getArgs();\n  return (\n    Object.entries(args)\n      // filter out specified list of options\n      .filter(arg => ignoreOptionsArray.indexOf(arg[0]) === -1)\n      // filter out all environment variables\n      .filter(arg => arg[0] !== 'e')\n      // check if flag is of boolean type and just return flag name\n      // yargs sets true if only flag was present without value\n      .map((arg) => {\n        if (typeof arg[1] === 'boolean') {\n          return [arg[0]];\n        }\n        return [arg[0], arg[1]];\n      })\n      // prefix flag names with either a single dash (-) or double (--) dash\n      .map((arg) => {\n        const argWithPrefix = [...arg];\n        if (arg[0].length > 1) {\n          argWithPrefix[0] = `--${arg[0]}`;\n        } else {\n          argWithPrefix[0] = `-${arg[0]}`;\n        }\n        return argWithPrefix;\n      })\n  );\n};\n\n// eslint-disable-next-line\nexport const flattenOptions = options => [].concat.apply([], options);\n\n// returns true if use passed in -d flag otherwise false\nexport const isDebug = () => !!getArg('d');\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/args.js","import colors from 'colors';\nimport { logPrefix } from './constants';\nimport { isDebug } from './args';\nimport spinner from './spinner';\n\nexport default class Logger {\n  static info(message, ...rest) {\n    if (!isDebug()) {\n      this.log('start', message, rest);\n    } else {\n      this.debug(message);\n    }\n  }\n  static debug(message, ...rest) {\n    if (isDebug()) {\n      this.log('info', message, rest);\n    }\n  }\n  static warn(message, ...rest) {\n    this.log('warn', colors.yellow(message), rest);\n  }\n  static error(message, ...rest) {\n    this.log('fail', colors.red(message), rest);\n  }\n  static succeed(message, ...rest) {\n    if (!isDebug()) {\n      this.log('succeed', message, rest);\n    }\n  }\n  static log(type, message, rest) {\n    const restOfMessage = [...rest][0] && rest.join(' ');\n    const prefixed = `${logPrefix}${message} ${!restOfMessage ? '' : restOfMessage}`;\n    if (type === 'succeed') {\n      spinner.succeed();\n    } else {\n      spinner[type](prefixed);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/logger.js","import spawnProcess from './process';\nimport { meteorNowBuildPath } from './constants';\nimport { readFile } from './files';\nimport { getEnvironmentVariable } from './args';\nimport logger from './logger';\n\n// get the full meteor release version\nexport const getVersion = async () => {\n  const release = await readFile('.meteor/release');\n  return release.match(/METEOR@(.*)\\r?\\n/)[1];\n};\n\n// get the minor version number of the meteor release\nexport const getMicroVersion = async () => {\n  const version = await getVersion();\n  return version.split('.')[1];\n};\n\n// check to see if server only flag should be\n// passed to meteor build\nexport const shouldBeServerOnly = () => {\n  if (parseInt(getMicroVersion(), 10) < 3) {\n    return false;\n  }\n  return true;\n};\n\n// build the meteor app by using meteor build\nexport const buildMeteorApp = async () => {\n  try {\n    logger.info('Building meteor app (this can take several minutes)');\n    await spawnProcess('meteor', [\n      'build',\n      meteorNowBuildPath,\n      shouldBeServerOnly() ? '--server-only' : '',\n      '--architecture=os.linux.x86_64',\n    ]);\n    logger.succeed();\n  } catch (e) {\n    // eslint-disable-next-line\n    logger.error(e);\n  }\n};\n\n// get meteor settings by checking for settings.json files\n// uses NODE_ENV to determine which settings file to load\nexport const getMeteorSettings = async () => {\n  const nodeEnv = getEnvironmentVariable('NODE_ENV');\n  if (nodeEnv) {\n    const settingsFilePath = `${nodeEnv}.settings.json`;\n    try {\n      const settingsFile = await readFile(settingsFilePath);\n      return settingsFile.replace(/\\r?\\n|\\r/g, '');\n    } catch (e) {\n      throw e;\n    }\n  }\n  return null;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/meteor.js","import fs from 'file-system';\nimport splitFile from 'split-file';\nimport del from 'del';\nimport logger from './logger';\nimport { meteorNowBuildPath, tarFileName } from './constants';\n\nconst encoding = 'utf8';\n\nexport const readFile = path => fs.readFileSync(path, encoding);\nexport const writeFile = (path, data) => fs.writeFileSync(path, data, encoding);\n\nexport const deletePath = path => del(path, { force: true });\n\n// split meteor bundle into pieces\nexport const splitBuild = async () => {\n  logger.debug('splitting bundle');\n  try {\n    await splitFile.splitFileBySize(`${meteorNowBuildPath}/${tarFileName}`, 99999);\n  } catch (e) {\n    logger.error(e);\n  }\n  await deletePath(`${meteorNowBuildPath}/${tarFileName}`);\n};\n\nexport const clearBuildFolder = () => {\n  logger.debug('clearing build folder');\n  return deletePath(meteorNowBuildPath);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/files.js","import { spawn } from 'child_process';\nimport { isDebug } from './args';\nimport logger from './logger';\n\nexport default (cmd, args) => {\n  logger.debug(`$ ${cmd}`, ...args);\n  return new Promise((resolve, reject) => {\n    const child = spawn(cmd, args, {\n      stdio: isDebug() ? 'inherit' : [process.stdin, 'pipe', process.stderr],\n      shell: true,\n    });\n\n    child.on('exit', (code, signal) => {\n      if (code !== 0) {\n        reject({ code, signal });\n      } else {\n        resolve();\n      }\n    });\n\n    if (child.stdout) {\n      child.stdout.on('data', (data) => {\n        resolve(data.toString());\n      });\n    }\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/process.js","import { buildMeteorApp } from './api/meteor';\nimport { prepareDockerConfig } from './api/docker';\nimport { clearBuildFolder, splitBuild } from './api/files';\nimport { deploy } from './api/now';\n\nconst main = async () => {\n  await clearBuildFolder();\n  await buildMeteorApp();\n  await prepareDockerConfig();\n  await splitBuild();\n  await deploy();\n};\n\nmain();\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"child_process\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"child_process\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"yargs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"yargs\"\n// module id = 9\n// module chunks = 0","module.exports = require(\"os\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"os\"\n// module id = 10\n// module chunks = 0","module.exports = require(\"colors\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"colors\"\n// module id = 11\n// module chunks = 0","import Ora from 'ora';\nimport cliSpinners from 'cli-spinners';\n\nclass Spinner extends Ora {\n  constructor() {\n    super();\n    this.spinner = cliSpinners.dots12;\n  }\n}\n\nconst spinner = new Spinner();\n\nexport default spinner;\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/spinner.js","module.exports = require(\"ora\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ora\"\n// module id = 13\n// module chunks = 0","module.exports = require(\"cli-spinners\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cli-spinners\"\n// module id = 14\n// module chunks = 0","module.exports = require(\"file-system\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"file-system\"\n// module id = 15\n// module chunks = 0","module.exports = require(\"split-file\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"split-file\"\n// module id = 16\n// module chunks = 0","module.exports = require(\"del\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"del\"\n// module id = 17\n// module chunks = 0","import { writeFile } from './files';\nimport logger from './logger';\nimport { meteorNowBuildPath, projectName } from './constants';\nimport { getMicroVersion } from './meteor';\nimport { getEnvironmentVariable, getArg } from './args';\n\n// get docker image version\nexport const getDockerImage = () =>\n  (parseInt(getMicroVersion(), 10) < 4 ? 'nodesource/jessie:0.10.43' : 'node:boron');\n\n// check if mongo url was passed as a env var\nexport const shouldIncludeMongo = () => !getEnvironmentVariable('MONGO_URL');\n\n// get the value of --deps flag\nexport const getDeps = () => getArg('deps');\n\n// construct the apt-get deps lines for the Dockerfile\nexport const getDependencyInstallScripts = (deps = getDeps('deps')) => {\n  if (!deps) {\n    return '';\n  }\n  const delimiter = deps.includes(',') ? ',' : ' ';\n  return deps\n    .split(delimiter)\n    .reduce(\n      (accumulator, currentValue) => `${accumulator}RUN apt-get install ${currentValue}\\n`,\n      '',\n    );\n};\n\n// construct the Dockerfile contents\nexport const getDockerfileContents = async () => {\n  // check if user pass any --deps to install in the image\n  const deps = getDeps();\n  // get approriate docker image vesion\n  const dockerImage = getDockerImage();\n  // check to see if mogno should be included\n  const includeMongo = shouldIncludeMongo();\n  return `FROM ${dockerImage}\n${deps ? getDependencyInstallScripts(deps) : ''}\n${includeMongo\n    ? `RUN apt-get update\nRUN apt-get install -y mongodb\nRUN apt-get install -y supervisor\nVOLUME [\"/data/db\"]`\n    : ''}\nLABEL name=\"${projectName}\"\nCOPY . /usr/src/app/\nWORKDIR /usr/src/app\nRUN cat *sf-part* > bundle.tar.gz\nRUN tar -xzf bundle.tar.gz\nWORKDIR bundle/programs/server\nRUN npm install\nWORKDIR ../../\n${includeMongo ? 'COPY supervisord.conf /etc/supervisor/supervisord.conf' : ''}\nEXPOSE 3000\n${includeMongo ? 'CMD [\"supervisord\"]' : 'CMD [\"node\", \"main.js\"]'}`;\n};\n\n// construct the supervisord contents\nexport const getSupervisordFileContents = () => `[supervisord]\nnodaemon=true\nloglevel=debug\n[program:mongo]\ncommand=mongod\n[program:node]\ncommand=node \"/usr/src/app/bundle/main.js\"`;\n\n// prepares all docker related files\nexport const prepareDockerConfig = async () => {\n  try {\n    logger.info('Preparing build');\n    const dockerfileContents = await getDockerfileContents();\n    await writeFile(`${meteorNowBuildPath}/Dockerfile`, dockerfileContents);\n\n    // if user did not pass MONGO_URL\n    if (shouldIncludeMongo()) {\n      logger.warn(\n        'WARNING: Did not pass a MONGO_URL. Bundling a NON-PRODUCTION version of MongoDB with your application. Read about the limitations here: https://git.io/vM72E',\n      );\n      logger.warn('WARNING: It might take a few minutes for the app to connect to the bundled MongoDB instance after the deployment has completed.');\n      logger.debug('creating supervisord.conf');\n      // create a supervisord.conf file to run mongodb inside the container\n      await writeFile(`${meteorNowBuildPath}/supervisord.conf`, getSupervisordFileContents());\n    }\n    logger.succeed();\n  } catch (e) {\n    // eslint-disable-next-line\n    logger.error(e);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/docker.js","import spawnProcess from './process';\nimport {\n  getEnvironmentVariable,\n  getEnvironmentVariables,\n  getRemainingOptions,\n  getRemainingVariables,\n  flattenOptions,\n  isDebug,\n} from './args';\nimport { getMeteorSettings } from './meteor';\nimport { meteorNowBuildPath, projectName } from './constants';\nimport logger from './logger';\n\n// construct an array of options to be passed to the now command\nexport const constructNowOptions = async () => {\n  // get list of all environment variables user passed with the -e flag\n  const environmentVariables = await getEnvironmentVariables();\n  // construct the ROOT_URL variable\n  const rootUrl =\n    getEnvironmentVariable('ROOT_URL', environmentVariables) || 'http://localhost:3000';\n  // construct the MONGO_URL variable\n  const mongoUrl =\n    getEnvironmentVariable('MONGO_URL', environmentVariables) || 'mongodb://127.0.0.1:27017';\n\n  const remainingVariables = getRemainingVariables(environmentVariables);\n\n  // options passed to the now cli tool. This array will be flattened\n  // and will eventually be a string seperated by spaces.\n  const options = [\n    meteorNowBuildPath,\n    ['--name', projectName],\n    ['-e', 'PORT=3000'],\n    ['-e', `ROOT_URL=${rootUrl}`],\n    ['-e', `MONGO_URL=${mongoUrl}`],\n    ...remainingVariables,\n  ];\n\n  // construct the METEOR_SETTINGS, first by checking if user passed\n  // -e METEOR_SETTINGS='{ \"foo\": \"bar\" }' option to meteor-now\n  let meteorSettings = getEnvironmentVariable('METEOR_SETTINGS', environmentVariables);\n  // if not, check if still no METEOR_SETTINGS exist\n  if (!meteorSettings) {\n    // check if NODE_ENV is passed and look for production.settings.json file\n    meteorSettings = await getMeteorSettings();\n  }\n  if (meteorSettings) {\n    options.push(['-e', `METEOR_SETTINGS='${meteorSettings}'`]);\n  }\n\n  // get any remaining custom flags passed in by user\n  const remainingOptions = getRemainingOptions();\n  if (remainingOptions) {\n    options.push(remainingOptions);\n  }\n\n  return options;\n};\n\n// deploy app with correct options\nexport const deploy = async () => {\n  try {\n    logger.info('Deploying build (this can take several minutes)');\n    const nowOptions = await constructNowOptions();\n    // spawn child process to execute now command. Flatten nowOptions\n    // in order to properly pass all the options to now\n    const deploymentUrl = await spawnProcess('now', flattenOptions(nowOptions));\n    logger.succeed();\n    if (!isDebug()) {\n      logger.info(`App url is ${deploymentUrl}`);\n      logger.succeed();\n    }\n  } catch (e) {\n    logger.error('Something went wrong with now');\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/now.js"],"sourceRoot":""}